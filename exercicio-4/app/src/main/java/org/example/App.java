/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import java.util.Scanner;

public class App {
    public static void main(String[] args) {
        String[] tabuleiro = new String[10];
        Scanner scanner = new Scanner(System.in);
        int i = 0;

        while (scanner.hasNextLine()) {
            String linha = scanner.nextLine();
            tabuleiro[i] = linha;
            i++;
        }

        /* Nesse trecho, é verificado se o tabuleiro é válido com base em vários critérios, como tamanho, a presença de návios conhecidos e se todos estão presentes no tabuleiro */
        if (get_tamanho_tabuleiro(tabuleiro, i) && get_navios_conhecidos(tabuleiro) && get_todos_navios(tabuleiro)) {
            System.out.println("Tabuleiro válido");
        } else {
            System.out.println("Tabuleiro inválido");
        }

        scanner.close();
    }

    public static boolean get_tamanho_tabuleiro(String[] tabuleiro, int i) {
        boolean tamanho_vertical_correto = (i == 10);
        boolean tamanho_horizontal_correto = true;

        for (String linha : tabuleiro) {
            if (linha == null || linha.length() != 10) {
                tamanho_horizontal_correto = false;
                break;
            }
        }

        return tamanho_vertical_correto && tamanho_horizontal_correto;
    }

    public static boolean get_navios_conhecidos(String[] tabuleiro) {
        boolean barco_conhecidos = true;

        for (String linha : tabuleiro) {

            for (int i = 0; i < linha.length(); i++) {
                char caractere = linha.charAt(i);

                /* Verifica se há caracteres inválidos no tabuleiro (Apenas pontos e símbolos dos barcos, 'P'; 'E'; 'C'; 'S'; 'N', são permitidos) */
                if (caractere != '.' && caractere != 'P' && caractere != 'E' && caractere != 'C' && caractere != 'S' && caractere != 'N') {
                    barco_conhecidos = false;
                    break;
                }
            }

        }
        return barco_conhecidos;
    }

    public static boolean get_todos_navios(String[] tabuleiro) {
        /*  Essa lista representa a presença de todos os barcos no tabuleiro, consecutivamente {Porta-aviões, Encouraçado, Cruzador, Submarino, Contratorpedeiro} */
        boolean barcos_disponiveis[] = {false, false, false, false, false}; 
        boolean todos_barcos_presentes = true;

        for (String linha : tabuleiro) {

            /*
            Uma iteração é feita para cada linha, com o intuito de verificar quais tipos de navios estão presentes
            */ 
            for (int i = 0; i < linha.length(); i++) {
                char caractere = linha.charAt(i);

                if (caractere == 'P') {
                    barcos_disponiveis[0] = true;
                }
                if (caractere == 'E') {
                    barcos_disponiveis[1] = true;
                }
                if (caractere == 'C') {
                    barcos_disponiveis[2] = true;
                }
                if (caractere == 'S') {
                    barcos_disponiveis[3] = true;
                }
                if (caractere == 'N') {
                    barcos_disponiveis[4] = true;
                }
            }

        }

        for (int i = 0; i < barcos_disponiveis.length; i++) {
            if (!barcos_disponiveis[i]) { // Caso um dos valores na lista seja 'false', ou seja, caso um dos barcos não tenha sido encontrado, logo o tabuleiro é inválido
                todos_barcos_presentes = false;
                break;
            }
        }

        return todos_barcos_presentes;
    }
}